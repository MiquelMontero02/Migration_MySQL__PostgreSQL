CREATE VIEW MAIL_LIST AS 
SELECT 
    SUBSTRING_INDEX(C1.EMAIL_LIST, ',', 1) AS CORREU,
    C1.CODI AS CENTRE 
FROM 
    RAW_IMPORT.CENTRE C1
WHERE C1.EMAIL_LIST LIKE '%,%'
UNION ALL
SELECT 
    SUBSTRING(SUBSTRING_INDEX(C2.EMAIL_LIST, ',', -1),2),
    C2.CODI AS CENTRE 
FROM 
    RAW_IMPORT.CENTRE C2 
WHERE C2.EMAIL_LIST LIKE '%,%'
UNION
SELECT 
    C3.EMAIL AS CORREU,
    C3.CODI AS CENTRE
FROM 
    RAW_IMPORT.CENTRE C3;

 /*VW_ADREC_LOCALITAT:   Vista donde se almacenan todos las direcciones, junto al centro y la localidad 
                        presentes tanto en el campo ADREC, dividiendo aquellas que presentaban
                        varias direcciones en el mismo campo*/
USE GESTMAT;

CREATE VIEW VW_ADREC_LOCALITAT AS
WITH carrers_multiples AS (
    SELECT 
        C1.ADREC AS ADREC,
        C1.LOCALITAT AS LOCALITAT,
        C1.CODI AS CENTRE
    FROM RAW_IMPORT.CENTRE C1
    WHERE C1.ADREC REGEXP '^[^/]+/[^/]+/[^/]+.*$' AND ADREC NOT LIKE '%S/N%'
    OR C1.ADREC REGEXP '_'
    OR C1.ADREC REGEXP ':'
    OR C1.ADREC REGEXP '(?:.*CTRA.*CTRA.*)'
),
carrer_restant AS (
SELECT 
    C2.ADREC AS ADREC,
    C2.LOCALITAT AS LOCALITAT,
    C2.CODI AS CENTRE
FROM RAW_IMPORT.CENTRE C2
WHERE CHAR_LENGTH(C2.ADREC) > 70
AND C2.ADREC NOT IN (SELECT ADREC FROM carrers_multiples)
AND C2.ADREC NOT LIKE '%S/N%'
),
llista_completa AS(
    SELECT CM.ADREC AS ADREC,
    CM.LOCALITAT AS LOCALITAT,
    CM.CENTRE AS CENTRE
    FROM carrers_multiples CM

    UNION

    SELECT 
        CR.ADREC AS ADREC,
        CR.LOCALITAT AS LOCALITAT,
        CR.CENTRE AS CENTRE
    FROM carrer_restant CR
),
primer_carrer AS(
    SELECT
        CASE
            WHEN LC1.ADREC LIKE "%: %" THEN CONCAT(SUBSTRING_INDEX(LC1.ADREC,": ",1),"1.2")
            WHEN LC1.ADREC LIKE "%1.2 /%" THEN SUBSTRING_INDEX(LC1.ADREC,"1.2 /",1)
            WHEN LC1.ADREC LIKE "%5/%" THEN CONCAT(SUBSTRING_INDEX(LC1.ADREC,"5/ ",1),"5")
            WHEN LC1.ADREC LIKE "%BAIXOS/%" THEN CONCAT(SUBSTRING_INDEX(LC1.ADREC,"S/ ",1),"S")
            WHEN LC1.ADREC LIKE "% - %" THEN SUBSTRING_INDEX(LC1.ADREC," - ",1)
            WHEN LC1.ADREC LIKE "% i %" THEN SUBSTRING_INDEX(LC1.ADREC," i ",1)
            WHEN LC1.ADREC LIKE "%_%" THEN SUBSTRING_INDEX(LC1.ADREC,"_",1)        
        END AS PRIMERA_parte,
        LC1.LOCALITAT AS LOCALITAT,
        LC1.CENTRE AS CENTRE
    FROM llista_completa LC1
),
segon_carrer AS(
   SELECT
     CASE
        WHEN LC2.ADREC LIKE "%: %" THEN SUBSTRING_INDEX(LC2.ADREC,": ",-1)
        WHEN LC2.ADREC LIKE "%1.2 /%" THEN SUBSTRING_INDEX(LC2.ADREC,"1.2 /",-1)
        WHEN LC2.ADREC LIKE "%5/%" THEN SUBSTRING_INDEX(SUBSTRING_INDEX(LC2.ADREC,"/ J",1),"5/ ",-1)
        WHEN LC2.ADREC LIKE "%BAIXOS/%" THEN SUBSTRING_INDEX(LC2.ADREC,"S/ ",-1)
        WHEN LC2.ADREC LIKE "% - %" THEN SUBSTRING_INDEX(LC2.ADREC," - ",-1)
        WHEN LC2.ADREC LIKE "% i %" THEN SUBSTRING_INDEX(LC2.ADREC," i ",-1)
        WHEN LC2.ADREC LIKE "%_%" THEN SUBSTRING_INDEX(LC2.ADREC,"_",-1)        
    END AS SEGONA_PART,
    LC2.LOCALITAT AS LOCALITAT,
    LC2.CENTRE AS CENTRE
    FROM llista_completa LC2
),
tercer_carrer AS (
    SELECT
    CASE
        WHEN LC3.ADREC LIKE "%5/%" THEN CONCAT("J",SUBSTRING_INDEX(SUBSTRING_INDEX(LC3.ADREC,"/ J",-1),"5/ ",-1))
    END AS TERCERA_PART,
    LC3.LOCALITAT AS LOCALITAT,
    LC3.CENTRE AS CENTRE
    FROM llista_completa LC3

),
result AS (
    SELECT 
        PC.PRIMERA_parte as ADREC,
        PC.LOCALITAT AS LOCALITAT,
        PC.CENTRE AS CENTRE
    FROM primer_carrer PC
    
    UNION

    SELECT 
        SC.SEGONA_PART AS ADREC,
        SC.LOCALITAT AS LOCALITAT,
        SC.CENTRE AS CENTRE
    FROM segon_carrer SC

    UNION 
    SELECT
        TERCERA_PART AS ADREC,
        TC.LOCALITAT AS LOCALITAT,
        TC.CENTRE AS CENTRE
    FROM tercer_carrer TC
    
),
adrec_list AS (
    SELECT
        C.ADREC,
        (SELECT
            L.ID
        FROM GESTMAT.LOCALITAT L
        WHERE L.NOM=LOCALITAT
        ) AS LOCALITAT,
        C.CODI AS CENTRE
    FROM 
        RAW_IMPORT.CENTRE C
    WHERE ADREC NOT IN (
        SELECT 
            ADREC 
        FROM llista_completa
        )
    UNION 
    SELECT 
        R.ADREC,
            (SELECT
            L.ID
        FROM GESTMAT.LOCALITAT L
        WHERE L.NOM=LOCALITAT
        ) AS LOCALITAT,
        R.CENTRE AS CENTRE
    FROM 
    result R
    WHERE R.ADREC IS NOT NULL
)
select ADREC,CENTRE,LOCALITAT from adrec_list GROUP BY ADREC,CENTRE,LOCALITAT;


/*CURS*/
INSERT INTO CURS(ID)
SELECT
    M.CURS AS ID
FROM
    RAW_IMPORT.MATRICULA M
GROUP BY M.CURS;

/*ASSIGNATURA*/

INSERT INTO 
    ASSIGNATURA(NOM)
SELECT
    TRIM(M.ASSIGNATURA) AS NOM
FROM
    RAW_IMPORT.MATRICULA M 
GROUP BY TRIM(M.ASSIGNATURA)
ORDER BY NOM;
/*ILLA*/


/*DENOM_GEN*/

INSERT INTO DENOM_GEN(NOM) 
SELECT 
    C.DENOM_GEN AS DENOM_GEN 
FROM RAW_IMPORT.CENTRE C
GROUP BY C.DENOM_GEN;

/*COM_AUT*/
INSERT INTO COM_AUT(NOM) 
SELECT 
    E.COM_AUT AS NOM
FROM RAW_IMPORT.ESTUDIANT E 
GROUP BY E.COM_AUT;

/*TIPO_ENSNY*/

INSERT INTO TIPO_ENSNY(NOM)
SELECT
    M.TIPO_ENSNY AS NOM
FROM
    RAW_IMPORT.MATRICULA M 
GROUP BY M.TIPO_ENSNY;

/*DISTRIT*/
INSERT INTO DISTRIT(ID) 
SELECT 
    CASE 
        WHEN LEFT(E.CP_DISTR,1)=7 THEN RIGHT(E.CP_DISTR,3)
        ELSE RIGHT(E.CP_DISTR,2) 
    END AS ID  
FROM RAW_IMPORT.ESTUDIANT E 
GROUP BY ID;

/*MODALITAT*/

INSERT INTO MODALITAT(NOM)
SELECT
    M.MODALITAT AS NOM
FROM
    RAW_IMPORT.MATRICULA M
GROUP BY M.MODALITAT;

/*GRUP*/

INSERT INTO GRUP(ID)
SELECT
    M.GRUP AS ID
FROM
    RAW_IMPORT.MATRICULA M 
GROUP BY M.GRUP;

/*CORREU_ELECT*/
INSERT INTO CORR_ELECT(CORR_ELECT)
SELECT 
    ML.CORREU AS CORR_ELECT
FROM 
    MAIL_LIST ML;

/*TITULAR*/

INSERT INTO GESTMAT.TITULAR (NIF, NOM)
SELECT
    C.NIF AS NIF,
    MAX(C.TITULAR) AS NOM
FROM RAW_IMPORT.CENTRE C
WHERE LENGTH(C.NIF)>7 AND C.NIF NOT LIKE "%NO%"
GROUP BY C.NIF;

INSERT INTO GESTMAT.TITULAR (NIF, NOM) VALUES ("00000000","BUIT");

/*LOCALITAT*/
INSERT INTO LOCALITAT (NOM)
SELECT 
    C.LOCALITAT AS NOM
FROM RAW_IMPORT.CENTRE C 
GROUP BY C.LOCALITAT;

INSERT INTO ILLA(NOM,COM_AUT)
WITH MUNI_ILLA AS
(
    SELECT 
        C.ILLA AS ILLA,
        MAX(C.MUNICIPI) AS MUNICIPI
    FROM 
        RAW_IMPORT.CENTRE C
    GROUP BY C.ILLA
) 
SELECT 
    MI.ILLA AS NOM,
    MAX(E.COM_AUT) AS COM_AUT
FROM 
    MUNI_ILLA MI 
JOIN
    RAW_IMPORT.ESTUDIANT E ON E.MUNICIPI=MI.MUNICIPI
 GROUP BY MI.ILLA;

/*MUNICIPI*/

INSERT INTO GESTMAT.MUNICIPI(NOM,COM_AUT)
SELECT
    E.MUNICIPI AS NOM,
    MAX(E.COM_AUT) AS COM_AUT
FROM RAW_IMPORT.ESTUDIANT E 
GROUP BY E.MUNICIPI;

/*CODI_POSTAL*/
INSERT INTO CODI_POSTAL(CP,MUNICIPI)
SELECT
    CONCAT('0',C.CP),
    MAX((SELECT 
        M.ID
    FROM GESTMAT.MUNICIPI M 
    WHERE 
        CASE
            WHEN C.MUNICIPI="CIUTADELLA" THEN M.NOM LIKE "CIUTADELLA %"
            ELSE M.NOM=C.MUNICIPI
            END LIMIT 1)) AS ID_MUN
FROM 
    RAW_IMPORT.CENTRE C
GROUP BY C.CP;

/*CENTRE*/

INSERT INTO CENTRE(ID,NOM_CENTRE,TELEFON,WEB,TITULAR,CP)
SELECT
    CODI AS ID,
    C.NOM AS NOM_CENTRE,
    CASE
        WHEN C.TELEFON="" THEN 0
        WHEN C.TELEFON LIKE "% %" THEN CAST(CONCAT(SUBSTRING_INDEX(C.TELEFON," ",1),SUBSTRING_INDEX(C.TELEFON," ",-1))AS UNSIGNED INTEGER)
        WHEN C.TELEFON LIKE "%ext%" THEN CAST(SUBSTRING_INDEX(C.TELEFON,"ext:",-1) AS UNSIGNED INTEGER)
        ELSE C.TELEFON
    END AS TELEFON,
    C.WEB AS WEB,
    CASE
        WHEN C.NIF LIKE "%NO%" OR LENGTH(NIF) <8 THEN "00000000"
        ELSE C.NIF 
    END AS TITULAR,
    CONCAT('0',C.CP)
FROM RAW_IMPORT.CENTRE C;


/*ESTUDIANT*/

INSERT INTO ESTUDIANT (DNI,EMAIL,NOM,COGNOM,COGNOM_AD,MUNICIPI)
SELECT 
    E.DNI AS DNI,
    E.EMAIL AS EMAIL,
    E.NOM AS NOM,
    E.COGNOM_1 AS COGNOM,
    E.COGNOM_2 AS COGNOM_AD,
    (SELECT 
        M.ID
    FROM GESTMAT.MUNICIPI M 
    WHERE 
        CASE
            WHEN E.MUNICIPI="CIUTADELLA" THEN M.NOM LIKE "CIUTADELLA %"
            ELSE M.NOM=E.MUNICIPI
            END LIMIT 1) AS MUNICIPI
FROM RAW_IMPORT.ESTUDIANT E;

/*ADRECA*/

INSERT INTO ADRECA(NOM,LOCALITAT,CENTRE)
SELECT 
    VAL.ADREC AS NOM,
    VAL.LOCALITAT AS LOCALITAT,
    VAL.CENTRE AS CENTRE
FROM
    VW_ADREC_LOCALITAT VAL;

/*MATRICULA*/

INSERT INTO MATRICULA (MODALITAT,CENTRE,TIPO_ENSNY,GRUP,CURS,ESTUDIANT,ASSIGNATURA)
SELECT
    M.MODALITAT AS MODALITAT,
    M.CODI_CENTRE AS CENTRE,
    M.TIPO_ENSNY AS TIPO_ENSNY,
    M.GRUP AS GRUP,
    M.CURS AS CURS,
    M.DNI AS ESTUDIANT,
    M.ASSIGNATURA AS ASSIGNATURA
FROM RAW_IMPORT.MATRICULA M;

/*R_CENTRE_CORREU*/
INSERT INTO R_CENTRE_CORREU(CENTRE,CORREU)
SELECT
    ML.CENTRE AS CENTRE,
    (SELECT 
        CE.ID 
    FROM GESTMAT.CORR_ELECT CE
    WHERE CE.CORR_ELECT = ML.CORREU 
    LIMIT 1) AS CORREU
FROM MAIL_LIST ML;

/*R_MUNICIPI_DISTR*/
INSERT INTO R_MUNICIPI_DISTRIT(MUNICIPI, DISTRIT)
SELECT
    (SELECT 
        M.ID
    FROM GESTMAT.MUNICIPI M 
    WHERE 
        CASE
            WHEN E.MUNICIPI="CIUTADELLA" THEN M.NOM LIKE "CIUTADELLA %"
            ELSE M.NOM=E.MUNICIPI
            END LIMIT 1) AS MUNICIPI,
    CASE 
        WHEN LEFT(E.CP_DISTR,1)=7 THEN RIGHT(E.CP_DISTR,3)
        ELSE RIGHT(E.CP_DISTR,2) 
    END AS DISTRIT
FROM RAW_IMPORT.ESTUDIANT E
GROUP BY E.MUNICIPI,DISTRIT;

INSERT INTO R_MUNICIPI_LOCALITAT(MUNICIPI, LOCALITAT)
WITH MUNI_LOC AS (
    SELECT 
        C.MUNICIPI AS MUNICIPI,
        C.LOCALITAT AS LOCALITAT
    FROM 
        RAW_IMPORT.CENTRE C
    WHERE C.LOCALITAT!="CIUTADELLA DE MENORCA" 
    GROUP BY C.MUNICIPI,C.LOCALITAT
)
SELECT
    (SELECT 
        M.ID
    FROM GESTMAT.MUNICIPI M 
    WHERE 
        CASE
            WHEN ML.MUNICIPI="CIUTADELLA" THEN M.NOM LIKE "CIUTADELLA %"
            ELSE M.NOM=ML.MUNICIPI
            END LIMIT 1) AS MUNICIPI,
    (SELECT 
        L.ID
    FROM GESTMAT.LOCALITAT L 
    WHERE 
        CASE
            WHEN ML.LOCALITAT="CIUTADELLA" THEN L.NOM LIKE "CIUTADELLA %"
            ELSE L.NOM=ML.LOCALITAT
            END LIMIT 1) AS LOCALITAT
FROM MUNI_LOC ML;

CREATE TABLE CP_ESTUDIANT AS (
    SELECT  
        CONCAT('0',
            CASE 
                WHEN LEFT(E.CP_DISTR, 1) = '7' THEN LEFT(E.CP_DISTR, 4)
                ELSE SUBSTRING(LEFT(E.CP_DISTR, 5), 2) 
            END) AS CP,
        E.DNI 
        FROM RAW_IMPORT.ESTUDIANT E
);

/*TABLA NIF QUE NO CORRESPONDEN A NIFS VÁLIDS*/

CREATE TABLE NIF_BUITS AS 
SELECT 
    C.CODI,
    C.TITULAR AS NOM 
FROM 
    RAW_IMPORT.CENTRE C 
    WHERE LENGTH(C.NIF)<=7 OR C.NIF LIKE "%NO%";
